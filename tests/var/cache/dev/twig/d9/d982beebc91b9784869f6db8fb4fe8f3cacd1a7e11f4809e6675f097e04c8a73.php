<?php

use Twig\Environment;
use Twig\Error\LoaderError;
use Twig\Error\RuntimeError;
use Twig\Extension\SandboxExtension;
use Twig\Markup;
use Twig\Sandbox\SecurityError;
use Twig\Sandbox\SecurityNotAllowedTagError;
use Twig\Sandbox\SecurityNotAllowedFilterError;
use Twig\Sandbox\SecurityNotAllowedFunctionError;
use Twig\Source;
use Twig\Template;

/* vendor/fzaninotto/faker/src/Faker/Provider/hu_HU/Person.php */
class __TwigTemplate_7d1b5a1744daea55d30b19aa1319b526c30768ab0fd9588ff26cd8a710552abf extends \Twig\Template
{
    private $source;
    private $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->parent = false;

        $this->blocks = [
        ];
    }

    protected function doDisplay(array $context, array $blocks = [])
    {
        $macros = $this->macros;
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e->enter($__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "vendor/fzaninotto/faker/src/Faker/Provider/hu_HU/Person.php"));

        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02 = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02->enter($__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "vendor/fzaninotto/faker/src/Faker/Provider/hu_HU/Person.php"));

        // line 1
        echo "<?php

namespace Faker\\Provider\\hu_HU;

class Person extends \\Faker\\Provider\\Person
{
    protected static \$maleNameFormats = array(
        '";
        // line 8
        echo twig_escape_filter($this->env, (isset($context["lastName"]) || array_key_exists("lastName", $context) ? $context["lastName"] : (function () { throw new RuntimeError('Variable "lastName" does not exist.', 8, $this->source); })()), "html", null, true);
        echo " ";
        echo twig_escape_filter($this->env, (isset($context["firstNameMale"]) || array_key_exists("firstNameMale", $context) ? $context["firstNameMale"] : (function () { throw new RuntimeError('Variable "firstNameMale" does not exist.', 8, $this->source); })()), "html", null, true);
        echo "',
        '";
        // line 9
        echo twig_escape_filter($this->env, (isset($context["title"]) || array_key_exists("title", $context) ? $context["title"] : (function () { throw new RuntimeError('Variable "title" does not exist.', 9, $this->source); })()), "html", null, true);
        echo " ";
        echo twig_escape_filter($this->env, (isset($context["lastName"]) || array_key_exists("lastName", $context) ? $context["lastName"] : (function () { throw new RuntimeError('Variable "lastName" does not exist.', 9, $this->source); })()), "html", null, true);
        echo " ";
        echo twig_escape_filter($this->env, (isset($context["firstNameMale"]) || array_key_exists("firstNameMale", $context) ? $context["firstNameMale"] : (function () { throw new RuntimeError('Variable "firstNameMale" does not exist.', 9, $this->source); })()), "html", null, true);
        echo "',
        '";
        // line 10
        echo twig_escape_filter($this->env, (isset($context["lastName"]) || array_key_exists("lastName", $context) ? $context["lastName"] : (function () { throw new RuntimeError('Variable "lastName" does not exist.', 10, $this->source); })()), "html", null, true);
        echo " ";
        echo twig_escape_filter($this->env, (isset($context["firstNameMale"]) || array_key_exists("firstNameMale", $context) ? $context["firstNameMale"] : (function () { throw new RuntimeError('Variable "firstNameMale" does not exist.', 10, $this->source); })()), "html", null, true);
        echo " ";
        echo twig_escape_filter($this->env, (isset($context["suffix"]) || array_key_exists("suffix", $context) ? $context["suffix"] : (function () { throw new RuntimeError('Variable "suffix" does not exist.', 10, $this->source); })()), "html", null, true);
        echo "',
        '";
        // line 11
        echo twig_escape_filter($this->env, (isset($context["title"]) || array_key_exists("title", $context) ? $context["title"] : (function () { throw new RuntimeError('Variable "title" does not exist.', 11, $this->source); })()), "html", null, true);
        echo " ";
        echo twig_escape_filter($this->env, (isset($context["lastName"]) || array_key_exists("lastName", $context) ? $context["lastName"] : (function () { throw new RuntimeError('Variable "lastName" does not exist.', 11, $this->source); })()), "html", null, true);
        echo " ";
        echo twig_escape_filter($this->env, (isset($context["firstNameMale"]) || array_key_exists("firstNameMale", $context) ? $context["firstNameMale"] : (function () { throw new RuntimeError('Variable "firstNameMale" does not exist.', 11, $this->source); })()), "html", null, true);
        echo " ";
        echo twig_escape_filter($this->env, (isset($context["suffix"]) || array_key_exists("suffix", $context) ? $context["suffix"] : (function () { throw new RuntimeError('Variable "suffix" does not exist.', 11, $this->source); })()), "html", null, true);
        echo "',
    );

    protected static \$femaleNameFormats = array(
        '";
        // line 15
        echo twig_escape_filter($this->env, (isset($context["lastName"]) || array_key_exists("lastName", $context) ? $context["lastName"] : (function () { throw new RuntimeError('Variable "lastName" does not exist.', 15, $this->source); })()), "html", null, true);
        echo " ";
        echo twig_escape_filter($this->env, (isset($context["firstNameFemale"]) || array_key_exists("firstNameFemale", $context) ? $context["firstNameFemale"] : (function () { throw new RuntimeError('Variable "firstNameFemale" does not exist.', 15, $this->source); })()), "html", null, true);
        echo "',
        '";
        // line 16
        echo twig_escape_filter($this->env, (isset($context["title"]) || array_key_exists("title", $context) ? $context["title"] : (function () { throw new RuntimeError('Variable "title" does not exist.', 16, $this->source); })()), "html", null, true);
        echo " ";
        echo twig_escape_filter($this->env, (isset($context["lastName"]) || array_key_exists("lastName", $context) ? $context["lastName"] : (function () { throw new RuntimeError('Variable "lastName" does not exist.', 16, $this->source); })()), "html", null, true);
        echo " ";
        echo twig_escape_filter($this->env, (isset($context["firstNameFemale"]) || array_key_exists("firstNameFemale", $context) ? $context["firstNameFemale"] : (function () { throw new RuntimeError('Variable "firstNameFemale" does not exist.', 16, $this->source); })()), "html", null, true);
        echo "',
        '";
        // line 17
        echo twig_escape_filter($this->env, (isset($context["lastName"]) || array_key_exists("lastName", $context) ? $context["lastName"] : (function () { throw new RuntimeError('Variable "lastName" does not exist.', 17, $this->source); })()), "html", null, true);
        echo " ";
        echo twig_escape_filter($this->env, (isset($context["firstNameFemale"]) || array_key_exists("firstNameFemale", $context) ? $context["firstNameFemale"] : (function () { throw new RuntimeError('Variable "firstNameFemale" does not exist.', 17, $this->source); })()), "html", null, true);
        echo " ";
        echo twig_escape_filter($this->env, (isset($context["suffix"]) || array_key_exists("suffix", $context) ? $context["suffix"] : (function () { throw new RuntimeError('Variable "suffix" does not exist.', 17, $this->source); })()), "html", null, true);
        echo "',
        '";
        // line 18
        echo twig_escape_filter($this->env, (isset($context["title"]) || array_key_exists("title", $context) ? $context["title"] : (function () { throw new RuntimeError('Variable "title" does not exist.', 18, $this->source); })()), "html", null, true);
        echo " ";
        echo twig_escape_filter($this->env, (isset($context["lastName"]) || array_key_exists("lastName", $context) ? $context["lastName"] : (function () { throw new RuntimeError('Variable "lastName" does not exist.', 18, $this->source); })()), "html", null, true);
        echo " ";
        echo twig_escape_filter($this->env, (isset($context["firstNameFemale"]) || array_key_exists("firstNameFemale", $context) ? $context["firstNameFemale"] : (function () { throw new RuntimeError('Variable "firstNameFemale" does not exist.', 18, $this->source); })()), "html", null, true);
        echo " ";
        echo twig_escape_filter($this->env, (isset($context["suffix"]) || array_key_exists("suffix", $context) ? $context["suffix"] : (function () { throw new RuntimeError('Variable "suffix" does not exist.', 18, $this->source); })()), "html", null, true);
        echo "',
        /* ..nÃ©*/
        '";
        // line 20
        echo twig_escape_filter($this->env, (isset($context["lastName"]) || array_key_exists("lastName", $context) ? $context["lastName"] : (function () { throw new RuntimeError('Variable "lastName" does not exist.', 20, $this->source); })()), "html", null, true);
        echo " ";
        echo twig_escape_filter($this->env, (isset($context["firstNameMaleNe"]) || array_key_exists("firstNameMaleNe", $context) ? $context["firstNameMaleNe"] : (function () { throw new RuntimeError('Variable "firstNameMaleNe" does not exist.', 20, $this->source); })()), "html", null, true);
        echo "',
        '";
        // line 21
        echo twig_escape_filter($this->env, (isset($context["title"]) || array_key_exists("title", $context) ? $context["title"] : (function () { throw new RuntimeError('Variable "title" does not exist.', 21, $this->source); })()), "html", null, true);
        echo " ";
        echo twig_escape_filter($this->env, (isset($context["lastName"]) || array_key_exists("lastName", $context) ? $context["lastName"] : (function () { throw new RuntimeError('Variable "lastName" does not exist.', 21, $this->source); })()), "html", null, true);
        echo " ";
        echo twig_escape_filter($this->env, (isset($context["firstNameMaleNe"]) || array_key_exists("firstNameMaleNe", $context) ? $context["firstNameMaleNe"] : (function () { throw new RuntimeError('Variable "firstNameMaleNe" does not exist.', 21, $this->source); })()), "html", null, true);
        echo "',
    );

    protected static \$firstNameMale = array(
        'Albert', 'Attila', 'BalÃ¡zs', 'Bence', 'Botond', 'DoriÃ¡n', 'Endre', 'ErnÅ', 'GÃ¡bor', 'GÃ©za', 'Imre', 'IstvÃ¡n',
        'Kevin', 'KornÃ©l', 'KristÃ³f', 'LÃ¡szlÃ³', 'MilÃ¡n', 'Noel', 'OlivÃ©r', 'OttÃ³', 'Patrik', 'PÃ©ter', 'RichÃ¡rd', 'Rudolf',
        'SÃ¡ndor', 'Vilmos', 'Vince', 'ZoltÃ¡n', 'Zsolt', 'ÃdÃ¡m', 'Ãrmin', 'Ãron', 'Antal', 'Barna', 'BarnabÃ¡s', 'BendegÃºz',
        'Benedek', 'Hunor', 'JenÅ', 'JÃ¡nos', 'MihÃ¡ly', 'MÃ¡tyÃ¡s', 'SzervÃ¡c', 'Zsombor', 'ZÃ©tÃ©ny', 'ÃrpÃ¡d',
    );

    protected static \$firstNameMaleNe = array(
        'AlbertnÃ©', 'AttilÃ¡nÃ©', 'BalÃ¡zsnÃ©', 'BencÃ©nÃ©', 'BotondnÃ©', 'DoriÃ¡nnÃ©', 'EndrenÃ©', 'ErnÅnÃ©', 'GÃ¡bornÃ©', 'GÃ©zanÃ©', 'ImrÃ©nÃ©', 'IstvÃ¡nnÃ©',
        'KevinnÃ©', 'KornÃ©lnÃ©', 'KristÃ³fnÃ©', 'LÃ¡szlÃ³nÃ©', 'MilÃ¡nnÃ©', 'NoelnÃ©', 'OlivÃ©rnÃ©', 'OttÃ³nÃ©', 'PatriknÃ©', 'PÃ©ternÃ©', 'RichÃ¡rdnÃ©', 'RudolfnÃ©',
        'SÃ¡ndornÃ©', 'VilmosnÃ©', 'VincÃ©nÃ©', 'ZoltÃ¡nnÃ©', 'ZsoltnÃ©', 'ÃdÃ¡mnÃ©', 'ÃrminnÃ©', 'ÃronnÃ©', 'AntalnÃ©', 'BarnÃ¡nÃ©', 'BarnabÃ¡snÃ©', 'BendegÃºz',
        'BenedeknÃ©', 'HunornÃ©', 'JenÅnÃ©', 'JÃ¡nosnÃ©', 'MihÃ¡lynÃ©', 'MÃ¡tyÃ¡snÃ©', 'SzervÃ¡cnÃ©', 'ZsombornÃ©', 'ZÃ©tÃ©nynÃ©', 'ÃrpÃ¡dnÃ©',
    );

    protected static \$firstNameFemale = array(
        'AdÃ©l', 'Alexa', 'Andrea', 'AngÃ©la', 'AnikÃ³', 'Beatrix', 'Bettina', 'Dalma', 'Dorina', 'Dorottya', 'Evelin', 'Fanni', 'FlÃ³ra', 'Gabriella',
        'Georgina', 'Gitta', 'Gizella', 'GrÃ©ta', 'Henrietta', 'Izabella', 'Johanna', 'Judit', 'Julianna', 'JÃ¡zmin', 'Kata', 'Katalin',
        'Katinka', 'Klaudia', 'KÃ­ra', 'LiliÃ¡na', 'Linda', 'Liza', 'LÃ©na', 'LÃ­via', 'Maja', 'Marianna', 'Marietta', 'Martina',
        'Mia', 'Milla', 'Mirella', 'MÃ¡ria', 'MÃ¡rton', 'MÃ­ra', 'Nikoletta', 'OlÃ­via', 'PatrÃ­cia', 'RamÃ³na', 'Rebeka', 'Soma',
        'Szandra', 'SÃ¡ra', 'ValÃ©ria', 'Zita', 'Aranka', 'BorÃ³ka', 'BoglÃ¡rka', 'Csenge', 'EmÅke', 'ErzsÃ©bet', 'Hanga', 'Henriett',
        'KincsÅ', 'Panna', 'Szabina', 'Szonja', 'VirÃ¡g', 'ZsÃ³ka',
    );

    protected static \$lastName = array(
        'Antal', 'Bakos', 'Balla', 'Balog', 'Balogh', 'BalÃ¡zs', 'Barna', 'Barta', 'BirÃ³', 'BodnÃ¡r', 'BogdÃ¡n', 'BognÃ¡r', 'BorbÃ©ly', 'Boros', 'Budai', 'BÃ¡lint', 'Csonka', 'DeÃ¡k', 'Dobos', 'DudÃ¡s', 'FaragÃ³', 'Farkas', 'Fazekas', 'FehÃ©r', 'Fekete', 'Fodor', 'FÃ¡biÃ¡n', 'FÃ¼lÃ¶p', 'GulyÃ¡s', 'GÃ¡l', 'GÃ¡spÃ¡r', 'Hajdu', 'HalÃ¡sz', 'HegedÃ¼s', 'HegedÅ±s', 'HorvÃ¡th', 'IllÃ©s', 'Jakab', 'JuhÃ¡sz', 'JÃ³nÃ¡s', 'Katona', 'Kelemen', 'Kerekes', 'KirÃ¡ly', 'Kis', 'Kiss', 'Kocsis', 'KovÃ¡cs', 'Kozma', 'Lakatos', 'Lengyel', 'LukÃ¡cs', 'LÃ¡szlÃ³', 'Magyar', 'Major', 'MolnÃ¡r', 'MÃ¡tÃ©', 'MÃ©szÃ¡ros', 'Nagy', 'Nemes', 'NovÃ¡k', 'NÃ©meth', 'OlÃ¡h', 'OrbÃ¡n', 'Orosz', 'OrsÃ³s', 'Pap', 'Papp', 'Pataki', 'PintÃ©r', 'PÃ¡l', 'PÃ¡sztor', 'PÃ©ter', 'RÃ¡cz', 'Simon', 'Sipos', 'Somogyi', 'SoÃ³s', 'SzabÃ³', 'Szalai', 'Szekeres', 'SzilÃ¡gyi', 'SzÃ©kely', 'SzÃ¼cs', 'SzÅke', 'SzÅ±cs', 'SÃ¡ndor', 'TakÃ¡cs', 'TamÃ¡s', 'TÃ³th', 'TÃ¶rÃ¶k', 'Varga', 'Vass', 'Veres', 'Vincze', 'VirÃ¡g', 'VÃ¡radi', 'VÃ©gh', 'VÃ¶rÃ¶s'
    );

    protected static \$title = array('Dr.', 'Prof.', 'id.', 'ifj.');

    private static \$suffix = array('PhD');

    public function title(\$gender = null)
    {
        return static::titleMale();
    }

    /**
     * replaced by specific unisex hungarian title
     */
    public static function titleMale()
    {
        return static::randomElement(static::\$title);
    }

    /**
     * specific Hungarian name format for females after marriage
     */
    public static function firstNameMaleNe()
    {
        return static::randomElement(static::\$firstNameMaleNe);
    }

    /**
     * replaced by specific unisex hungarian title
     */
    public static function titleFemale()
    {
        return static::titleMale();
    }

    /**
     * @example 'PhD'
     */
    public static function suffix()
    {
        return static::randomElement(static::\$suffix);
    }
}
";
        
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e->leave($__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e_prof);

        
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02->leave($__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02_prof);

    }

    public function getTemplateName()
    {
        return "vendor/fzaninotto/faker/src/Faker/Provider/hu_HU/Person.php";
    }

    public function isTraitable()
    {
        return false;
    }

    public function getDebugInfo()
    {
        return array (  126 => 21,  120 => 20,  109 => 18,  101 => 17,  93 => 16,  87 => 15,  74 => 11,  66 => 10,  58 => 9,  52 => 8,  43 => 1,);
    }

    public function getSourceContext()
    {
        return new Source("<?php

namespace Faker\\Provider\\hu_HU;

class Person extends \\Faker\\Provider\\Person
{
    protected static \$maleNameFormats = array(
        '{{lastName}} {{firstNameMale}}',
        '{{title}} {{lastName}} {{firstNameMale}}',
        '{{lastName}} {{firstNameMale}} {{suffix}}',
        '{{title}} {{lastName}} {{firstNameMale}} {{suffix}}',
    );

    protected static \$femaleNameFormats = array(
        '{{lastName}} {{firstNameFemale}}',
        '{{title}} {{lastName}} {{firstNameFemale}}',
        '{{lastName}} {{firstNameFemale}} {{suffix}}',
        '{{title}} {{lastName}} {{firstNameFemale}} {{suffix}}',
        /* ..nÃ©*/
        '{{lastName}} {{firstNameMaleNe}}',
        '{{title}} {{lastName}} {{firstNameMaleNe}}',
    );

    protected static \$firstNameMale = array(
        'Albert', 'Attila', 'BalÃ¡zs', 'Bence', 'Botond', 'DoriÃ¡n', 'Endre', 'ErnÅ', 'GÃ¡bor', 'GÃ©za', 'Imre', 'IstvÃ¡n',
        'Kevin', 'KornÃ©l', 'KristÃ³f', 'LÃ¡szlÃ³', 'MilÃ¡n', 'Noel', 'OlivÃ©r', 'OttÃ³', 'Patrik', 'PÃ©ter', 'RichÃ¡rd', 'Rudolf',
        'SÃ¡ndor', 'Vilmos', 'Vince', 'ZoltÃ¡n', 'Zsolt', 'ÃdÃ¡m', 'Ãrmin', 'Ãron', 'Antal', 'Barna', 'BarnabÃ¡s', 'BendegÃºz',
        'Benedek', 'Hunor', 'JenÅ', 'JÃ¡nos', 'MihÃ¡ly', 'MÃ¡tyÃ¡s', 'SzervÃ¡c', 'Zsombor', 'ZÃ©tÃ©ny', 'ÃrpÃ¡d',
    );

    protected static \$firstNameMaleNe = array(
        'AlbertnÃ©', 'AttilÃ¡nÃ©', 'BalÃ¡zsnÃ©', 'BencÃ©nÃ©', 'BotondnÃ©', 'DoriÃ¡nnÃ©', 'EndrenÃ©', 'ErnÅnÃ©', 'GÃ¡bornÃ©', 'GÃ©zanÃ©', 'ImrÃ©nÃ©', 'IstvÃ¡nnÃ©',
        'KevinnÃ©', 'KornÃ©lnÃ©', 'KristÃ³fnÃ©', 'LÃ¡szlÃ³nÃ©', 'MilÃ¡nnÃ©', 'NoelnÃ©', 'OlivÃ©rnÃ©', 'OttÃ³nÃ©', 'PatriknÃ©', 'PÃ©ternÃ©', 'RichÃ¡rdnÃ©', 'RudolfnÃ©',
        'SÃ¡ndornÃ©', 'VilmosnÃ©', 'VincÃ©nÃ©', 'ZoltÃ¡nnÃ©', 'ZsoltnÃ©', 'ÃdÃ¡mnÃ©', 'ÃrminnÃ©', 'ÃronnÃ©', 'AntalnÃ©', 'BarnÃ¡nÃ©', 'BarnabÃ¡snÃ©', 'BendegÃºz',
        'BenedeknÃ©', 'HunornÃ©', 'JenÅnÃ©', 'JÃ¡nosnÃ©', 'MihÃ¡lynÃ©', 'MÃ¡tyÃ¡snÃ©', 'SzervÃ¡cnÃ©', 'ZsombornÃ©', 'ZÃ©tÃ©nynÃ©', 'ÃrpÃ¡dnÃ©',
    );

    protected static \$firstNameFemale = array(
        'AdÃ©l', 'Alexa', 'Andrea', 'AngÃ©la', 'AnikÃ³', 'Beatrix', 'Bettina', 'Dalma', 'Dorina', 'Dorottya', 'Evelin', 'Fanni', 'FlÃ³ra', 'Gabriella',
        'Georgina', 'Gitta', 'Gizella', 'GrÃ©ta', 'Henrietta', 'Izabella', 'Johanna', 'Judit', 'Julianna', 'JÃ¡zmin', 'Kata', 'Katalin',
        'Katinka', 'Klaudia', 'KÃ­ra', 'LiliÃ¡na', 'Linda', 'Liza', 'LÃ©na', 'LÃ­via', 'Maja', 'Marianna', 'Marietta', 'Martina',
        'Mia', 'Milla', 'Mirella', 'MÃ¡ria', 'MÃ¡rton', 'MÃ­ra', 'Nikoletta', 'OlÃ­via', 'PatrÃ­cia', 'RamÃ³na', 'Rebeka', 'Soma',
        'Szandra', 'SÃ¡ra', 'ValÃ©ria', 'Zita', 'Aranka', 'BorÃ³ka', 'BoglÃ¡rka', 'Csenge', 'EmÅke', 'ErzsÃ©bet', 'Hanga', 'Henriett',
        'KincsÅ', 'Panna', 'Szabina', 'Szonja', 'VirÃ¡g', 'ZsÃ³ka',
    );

    protected static \$lastName = array(
        'Antal', 'Bakos', 'Balla', 'Balog', 'Balogh', 'BalÃ¡zs', 'Barna', 'Barta', 'BirÃ³', 'BodnÃ¡r', 'BogdÃ¡n', 'BognÃ¡r', 'BorbÃ©ly', 'Boros', 'Budai', 'BÃ¡lint', 'Csonka', 'DeÃ¡k', 'Dobos', 'DudÃ¡s', 'FaragÃ³', 'Farkas', 'Fazekas', 'FehÃ©r', 'Fekete', 'Fodor', 'FÃ¡biÃ¡n', 'FÃ¼lÃ¶p', 'GulyÃ¡s', 'GÃ¡l', 'GÃ¡spÃ¡r', 'Hajdu', 'HalÃ¡sz', 'HegedÃ¼s', 'HegedÅ±s', 'HorvÃ¡th', 'IllÃ©s', 'Jakab', 'JuhÃ¡sz', 'JÃ³nÃ¡s', 'Katona', 'Kelemen', 'Kerekes', 'KirÃ¡ly', 'Kis', 'Kiss', 'Kocsis', 'KovÃ¡cs', 'Kozma', 'Lakatos', 'Lengyel', 'LukÃ¡cs', 'LÃ¡szlÃ³', 'Magyar', 'Major', 'MolnÃ¡r', 'MÃ¡tÃ©', 'MÃ©szÃ¡ros', 'Nagy', 'Nemes', 'NovÃ¡k', 'NÃ©meth', 'OlÃ¡h', 'OrbÃ¡n', 'Orosz', 'OrsÃ³s', 'Pap', 'Papp', 'Pataki', 'PintÃ©r', 'PÃ¡l', 'PÃ¡sztor', 'PÃ©ter', 'RÃ¡cz', 'Simon', 'Sipos', 'Somogyi', 'SoÃ³s', 'SzabÃ³', 'Szalai', 'Szekeres', 'SzilÃ¡gyi', 'SzÃ©kely', 'SzÃ¼cs', 'SzÅke', 'SzÅ±cs', 'SÃ¡ndor', 'TakÃ¡cs', 'TamÃ¡s', 'TÃ³th', 'TÃ¶rÃ¶k', 'Varga', 'Vass', 'Veres', 'Vincze', 'VirÃ¡g', 'VÃ¡radi', 'VÃ©gh', 'VÃ¶rÃ¶s'
    );

    protected static \$title = array('Dr.', 'Prof.', 'id.', 'ifj.');

    private static \$suffix = array('PhD');

    public function title(\$gender = null)
    {
        return static::titleMale();
    }

    /**
     * replaced by specific unisex hungarian title
     */
    public static function titleMale()
    {
        return static::randomElement(static::\$title);
    }

    /**
     * specific Hungarian name format for females after marriage
     */
    public static function firstNameMaleNe()
    {
        return static::randomElement(static::\$firstNameMaleNe);
    }

    /**
     * replaced by specific unisex hungarian title
     */
    public static function titleFemale()
    {
        return static::titleMale();
    }

    /**
     * @example 'PhD'
     */
    public static function suffix()
    {
        return static::randomElement(static::\$suffix);
    }
}
", "vendor/fzaninotto/faker/src/Faker/Provider/hu_HU/Person.php", "/var/www/public/DevLaon/templates/vendor/fzaninotto/faker/src/Faker/Provider/hu_HU/Person.php");
    }
}
