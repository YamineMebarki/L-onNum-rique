<?php

use Twig\Environment;
use Twig\Error\LoaderError;
use Twig\Error\RuntimeError;
use Twig\Extension\SandboxExtension;
use Twig\Markup;
use Twig\Sandbox\SecurityError;
use Twig\Sandbox\SecurityNotAllowedTagError;
use Twig\Sandbox\SecurityNotAllowedFilterError;
use Twig\Sandbox\SecurityNotAllowedFunctionError;
use Twig\Source;
use Twig\Template;

/* var/cache/dev/ContainerRWJYAMq/getServicesResetterService.php */
class __TwigTemplate_cdae101f72565f9a62b95ed9ca8fd774f28698d9e3becb423a21d9a01c04451d extends \Twig\Template
{
    private $source;
    private $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->parent = false;

        $this->blocks = [
        ];
    }

    protected function doDisplay(array $context, array $blocks = [])
    {
        $macros = $this->macros;
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e->enter($__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "var/cache/dev/ContainerRWJYAMq/getServicesResetterService.php"));

        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02 = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02->enter($__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "var/cache/dev/ContainerRWJYAMq/getServicesResetterService.php"));

        // line 1
        echo "<?php

use Symfony\\Component\\DependencyInjection\\Argument\\RewindableGenerator;
use Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'services_resetter' shared service.

include_once \$this->targetDirs[3].'/vendor/symfony/http-kernel/DependencyInjection/ServicesResetter.php';

return \$this->services['services_resetter'] = new \\Symfony\\Component\\HttpKernel\\DependencyInjection\\ServicesResetter(new RewindableGenerator(function () {
    if (isset(\$this->services['cache.app'])) {
        yield 'cache.app' => (\$this->services['cache.app'] ?? null);
    }
    if (isset(\$this->services['cache.system'])) {
        yield 'cache.system' => (\$this->services['cache.system'] ?? null);
    }
    if (isset(\$this->privates['cache.validator'])) {
        yield 'cache.validator' => (\$this->privates['cache.validator'] ?? null);
    }
    if (isset(\$this->privates['cache.serializer'])) {
        yield 'cache.serializer' => (\$this->privates['cache.serializer'] ?? null);
    }
    if (isset(\$this->privates['cache.annotations'])) {
        yield 'cache.annotations' => (\$this->privates['cache.annotations'] ?? null);
    }
    if (isset(\$this->privates['cache.property_info'])) {
        yield 'cache.property_info' => (\$this->privates['cache.property_info'] ?? null);
    }
    if (isset(\$this->privates['cache.messenger.restart_workers_signal'])) {
        yield 'cache.messenger.restart_workers_signal' => (\$this->privates['cache.messenger.restart_workers_signal'] ?? null);
    }
    if (isset(\$this->privates['form.choice_list_factory.cached'])) {
        yield 'form.choice_list_factory.cached' => (\$this->privates['form.choice_list_factory.cached'] ?? null);
    }
    if (isset(\$this->services['profiler'])) {
        yield 'profiler' => (\$this->services['profiler'] ?? null);
    }
    if (isset(\$this->services['validator'])) {
        yield 'debug.validator' => (\$this->services['validator'] ?? null);
    }
    if (isset(\$this->privates['debug.stopwatch'])) {
        yield 'debug.stopwatch' => (\$this->privates['debug.stopwatch'] ?? null);
    }
    if (isset(\$this->services['event_dispatcher'])) {
        yield 'debug.event_dispatcher' => (\$this->services['event_dispatcher'] ?? null);
    }
    if (isset(\$this->privates['form.type.entity'])) {
        yield 'form.type.entity' => (\$this->privates['form.type.entity'] ?? null);
    }
    if (isset(\$this->services['security.token_storage'])) {
        yield 'security.token_storage' => (\$this->services['security.token_storage'] ?? null);
    }
    if (isset(\$this->privates['cache.security_expression_language'])) {
        yield 'cache.security_expression_language' => (\$this->privates['cache.security_expression_language'] ?? null);
    }
    if (isset(\$this->privates['swiftmailer.email_sender.listener'])) {
        yield 'swiftmailer.email_sender.listener' => (\$this->privates['swiftmailer.email_sender.listener'] ?? null);
    }
    if (isset(\$this->privates['monolog.handler.main'])) {
        yield 'monolog.handler.main' => (\$this->privates['monolog.handler.main'] ?? null);
    }
    if (isset(\$this->privates['monolog.handler.console'])) {
        yield 'monolog.handler.console' => (\$this->privates['monolog.handler.console'] ?? null);
    }
}, function () {
    return 0 + (int) (isset(\$this->services['cache.app'])) + (int) (isset(\$this->services['cache.system'])) + (int) (isset(\$this->privates['cache.validator'])) + (int) (isset(\$this->privates['cache.serializer'])) + (int) (isset(\$this->privates['cache.annotations'])) + (int) (isset(\$this->privates['cache.property_info'])) + (int) (isset(\$this->privates['cache.messenger.restart_workers_signal'])) + (int) (isset(\$this->privates['form.choice_list_factory.cached'])) + (int) (isset(\$this->services['profiler'])) + (int) (isset(\$this->services['validator'])) + (int) (isset(\$this->privates['debug.stopwatch'])) + (int) (isset(\$this->services['event_dispatcher'])) + (int) (isset(\$this->privates['form.type.entity'])) + (int) (isset(\$this->services['security.token_storage'])) + (int) (isset(\$this->privates['cache.security_expression_language'])) + (int) (isset(\$this->privates['swiftmailer.email_sender.listener'])) + (int) (isset(\$this->privates['monolog.handler.main'])) + (int) (isset(\$this->privates['monolog.handler.console']));
}), ['cache.app' => 'reset', 'cache.system' => 'reset', 'cache.validator' => 'reset', 'cache.serializer' => 'reset', 'cache.annotations' => 'reset', 'cache.property_info' => 'reset', 'cache.messenger.restart_workers_signal' => 'reset', 'form.choice_list_factory.cached' => 'reset', 'profiler' => 'reset', 'debug.validator' => 'reset', 'debug.stopwatch' => 'reset', 'debug.event_dispatcher' => 'reset', 'form.type.entity' => 'reset', 'security.token_storage' => 'setToken', 'cache.security_expression_language' => 'reset', 'swiftmailer.email_sender.listener' => 'reset', 'monolog.handler.main' => 'reset', 'monolog.handler.console' => 'reset']);
";
        
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e->leave($__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e_prof);

        
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02->leave($__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02_prof);

    }

    public function getTemplateName()
    {
        return "var/cache/dev/ContainerRWJYAMq/getServicesResetterService.php";
    }

    public function getDebugInfo()
    {
        return array (  43 => 1,);
    }

    public function getSourceContext()
    {
        return new Source("<?php

use Symfony\\Component\\DependencyInjection\\Argument\\RewindableGenerator;
use Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'services_resetter' shared service.

include_once \$this->targetDirs[3].'/vendor/symfony/http-kernel/DependencyInjection/ServicesResetter.php';

return \$this->services['services_resetter'] = new \\Symfony\\Component\\HttpKernel\\DependencyInjection\\ServicesResetter(new RewindableGenerator(function () {
    if (isset(\$this->services['cache.app'])) {
        yield 'cache.app' => (\$this->services['cache.app'] ?? null);
    }
    if (isset(\$this->services['cache.system'])) {
        yield 'cache.system' => (\$this->services['cache.system'] ?? null);
    }
    if (isset(\$this->privates['cache.validator'])) {
        yield 'cache.validator' => (\$this->privates['cache.validator'] ?? null);
    }
    if (isset(\$this->privates['cache.serializer'])) {
        yield 'cache.serializer' => (\$this->privates['cache.serializer'] ?? null);
    }
    if (isset(\$this->privates['cache.annotations'])) {
        yield 'cache.annotations' => (\$this->privates['cache.annotations'] ?? null);
    }
    if (isset(\$this->privates['cache.property_info'])) {
        yield 'cache.property_info' => (\$this->privates['cache.property_info'] ?? null);
    }
    if (isset(\$this->privates['cache.messenger.restart_workers_signal'])) {
        yield 'cache.messenger.restart_workers_signal' => (\$this->privates['cache.messenger.restart_workers_signal'] ?? null);
    }
    if (isset(\$this->privates['form.choice_list_factory.cached'])) {
        yield 'form.choice_list_factory.cached' => (\$this->privates['form.choice_list_factory.cached'] ?? null);
    }
    if (isset(\$this->services['profiler'])) {
        yield 'profiler' => (\$this->services['profiler'] ?? null);
    }
    if (isset(\$this->services['validator'])) {
        yield 'debug.validator' => (\$this->services['validator'] ?? null);
    }
    if (isset(\$this->privates['debug.stopwatch'])) {
        yield 'debug.stopwatch' => (\$this->privates['debug.stopwatch'] ?? null);
    }
    if (isset(\$this->services['event_dispatcher'])) {
        yield 'debug.event_dispatcher' => (\$this->services['event_dispatcher'] ?? null);
    }
    if (isset(\$this->privates['form.type.entity'])) {
        yield 'form.type.entity' => (\$this->privates['form.type.entity'] ?? null);
    }
    if (isset(\$this->services['security.token_storage'])) {
        yield 'security.token_storage' => (\$this->services['security.token_storage'] ?? null);
    }
    if (isset(\$this->privates['cache.security_expression_language'])) {
        yield 'cache.security_expression_language' => (\$this->privates['cache.security_expression_language'] ?? null);
    }
    if (isset(\$this->privates['swiftmailer.email_sender.listener'])) {
        yield 'swiftmailer.email_sender.listener' => (\$this->privates['swiftmailer.email_sender.listener'] ?? null);
    }
    if (isset(\$this->privates['monolog.handler.main'])) {
        yield 'monolog.handler.main' => (\$this->privates['monolog.handler.main'] ?? null);
    }
    if (isset(\$this->privates['monolog.handler.console'])) {
        yield 'monolog.handler.console' => (\$this->privates['monolog.handler.console'] ?? null);
    }
}, function () {
    return 0 + (int) (isset(\$this->services['cache.app'])) + (int) (isset(\$this->services['cache.system'])) + (int) (isset(\$this->privates['cache.validator'])) + (int) (isset(\$this->privates['cache.serializer'])) + (int) (isset(\$this->privates['cache.annotations'])) + (int) (isset(\$this->privates['cache.property_info'])) + (int) (isset(\$this->privates['cache.messenger.restart_workers_signal'])) + (int) (isset(\$this->privates['form.choice_list_factory.cached'])) + (int) (isset(\$this->services['profiler'])) + (int) (isset(\$this->services['validator'])) + (int) (isset(\$this->privates['debug.stopwatch'])) + (int) (isset(\$this->services['event_dispatcher'])) + (int) (isset(\$this->privates['form.type.entity'])) + (int) (isset(\$this->services['security.token_storage'])) + (int) (isset(\$this->privates['cache.security_expression_language'])) + (int) (isset(\$this->privates['swiftmailer.email_sender.listener'])) + (int) (isset(\$this->privates['monolog.handler.main'])) + (int) (isset(\$this->privates['monolog.handler.console']));
}), ['cache.app' => 'reset', 'cache.system' => 'reset', 'cache.validator' => 'reset', 'cache.serializer' => 'reset', 'cache.annotations' => 'reset', 'cache.property_info' => 'reset', 'cache.messenger.restart_workers_signal' => 'reset', 'form.choice_list_factory.cached' => 'reset', 'profiler' => 'reset', 'debug.validator' => 'reset', 'debug.stopwatch' => 'reset', 'debug.event_dispatcher' => 'reset', 'form.type.entity' => 'reset', 'security.token_storage' => 'setToken', 'cache.security_expression_language' => 'reset', 'swiftmailer.email_sender.listener' => 'reset', 'monolog.handler.main' => 'reset', 'monolog.handler.console' => 'reset']);
", "var/cache/dev/ContainerRWJYAMq/getServicesResetterService.php", "/var/www/public/DevLaon/templates/var/cache/dev/ContainerRWJYAMq/getServicesResetterService.php");
    }
}
